package pief2;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberTickUnit;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

public class Calculadora extends javax.swing.JFrame {

    Dados lista = new Dados();
    DefaultTableModel model;
    XYSeriesCollection dataset;
    FileWriter arquivo = null;
    File caminho;
    BufferedImage img;

    public Calculadora() {
        initComponents();
        frame();
        iconCalculadora();
        iconEstatistica();
        iconGrafico();
        iconSave();
        iconImport();
        
        media.setText("");
        model = (DefaultTableModel) tabela.getModel();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painel = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane14 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        remover = new javax.swing.JButton();
        Limpar = new javax.swing.JButton();
        adicionarValor = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        frequencia = new javax.swing.JTextField();
        Adicionar = new javax.swing.JButton();
        importarTabela = new javax.swing.JButton();
        salvarTabela = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        media = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        coefVariacao = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        pearson = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        mediana = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        desvioPadrao = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        moda = new javax.swing.JTextField();
        quartil = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        quartilValor = new javax.swing.JTextField();
        calcular = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jSlider1 = new javax.swing.JSlider();
        jLabel13 = new javax.swing.JLabel();
        percentil = new javax.swing.JTextField();
        tick = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        poligonoFreq = new javax.swing.JPanel();
        histograma = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        painel.setBackground(new java.awt.Color(255, 255, 255));
        painel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                painelFocusGained(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(102, 255, 204));

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Valores", "Frequencia"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Double.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabela.getTableHeader().setResizingAllowed(false);
        tabela.getTableHeader().setReorderingAllowed(false);
        jScrollPane14.setViewportView(tabela);

        jLabel8.setText("Remover valor:");

        remover.setText("Remover selecionado");
        remover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerActionPerformed(evt);
            }
        });

        Limpar.setText("Limpar");
        Limpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LimparActionPerformed(evt);
            }
        });

        jLabel1.setText("Valor:");

        jLabel7.setText("Frequência:");

        Adicionar.setText("Adicionar");
        Adicionar.setRequestFocusEnabled(false);
        Adicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdicionarActionPerformed(evt);
            }
        });

        importarTabela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importarTabelaActionPerformed(evt);
            }
        });

        salvarTabela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarTabelaActionPerformed(evt);
            }
        });

        jLabel2.setText("Média");

        media.setEditable(false);

        jLabel6.setText("C.V");

        coefVariacao.setEditable(false);

        jLabel10.setText("Coeficiente");

        jLabel11.setText("de Pearson");

        pearson.setEditable(false);

        jLabel3.setText("Mediana");

        mediana.setEditable(false);

        jLabel5.setText("Desvio Padrão");

        desvioPadrao.setEditable(false);

        jLabel4.setText("Moda");

        moda.setEditable(false);
        moda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modaActionPerformed(evt);
            }
        });

        quartil.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1 Quartil", "2 Quartil", "3 Quartil"}));
        quartil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quartilActionPerformed(evt);
            }
        });

        jLabel9.setText("Quartil");

        quartilValor.setEditable(false);

        calcular.setText("Calcular");
        calcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcularActionPerformed(evt);
            }
        });

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pief2/resources/images/logo.png"))); // NOI18N

        jSlider1.setBackground(new java.awt.Color(102, 255, 204));
        jSlider1.setMaximum(99);
        jSlider1.setMinimum(1);
        jSlider1.setPaintTicks(true);
        jSlider1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jSlider1MouseReleased(evt);
            }
        });

        jLabel13.setText("Percentil");

        percentil.setEditable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane14)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel8)
                            .addComponent(remover, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Limpar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel12))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(frequencia, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                                    .addComponent(adicionarValor))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(Adicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(70, 70, 70)
                                        .addComponent(importarTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(salvarTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(calcular, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel2))
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(mediana, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addComponent(media, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(coefVariacao, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(moda, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(percentil, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                                            .addComponent(quartilValor)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(jLabel11))
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(jLabel10)
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                        .addGap(18, 18, 18)
                                        .addComponent(pearson, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(1, 1, 1))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel13)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addGap(18, 18, 18)
                                                .addComponent(desvioPadrao, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tick, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(quartil, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(importarTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(salvarTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(adicionarValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Adicionar))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(frequencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7)
                                    .addComponent(calcular)))))
                    .addComponent(jLabel12))
                .addGap(17, 17, 17)
                .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(mediana, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)
                        .addComponent(quartilValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(quartil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(remover, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(9, 9, 9)
                                        .addComponent(tick, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(percentil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(24, 24, 24)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(desvioPadrao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5)
                                    .addComponent(coefVariacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6)))
                            .addComponent(jLabel2)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(media, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel13)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Limpar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(pearson, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel10)
                                .addGap(0, 0, 0)
                                .addComponent(jLabel11))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(moda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))))))
                .addContainerGap(58, Short.MAX_VALUE))
        );

        painel.addTab("Estatística", jPanel2);

        jPanel3.setBackground(new java.awt.Color(102, 255, 204));

        poligonoFreq.setBackground(new java.awt.Color(102, 255, 204));
        poligonoFreq.setLayout(new java.awt.BorderLayout());

        histograma.setBackground(new java.awt.Color(102, 255, 204));
        histograma.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(poligonoFreq, javax.swing.GroupLayout.DEFAULT_SIZE, 683, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(histograma, javax.swing.GroupLayout.DEFAULT_SIZE, 703, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(poligonoFreq, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(histograma, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                .addGap(23, 23, 23))
        );

        painel.addTab("Gráfico", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painel)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(painel, javax.swing.GroupLayout.PREFERRED_SIZE, 559, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void painelFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_painelFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_painelFocusGained

    private void jSlider1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSlider1MouseReleased
        tick.setText(String.valueOf(jSlider1.getValue()));
        if (model.getRowCount() > 2) {

            if (lista.percentil(jSlider1.getValue()) == 0) {
                percentil.setText("Adicione mais valores");
            } else {
                percentil.setText(String.valueOf(lista.percentil(jSlider1.getValue())));
            }
        }
    }//GEN-LAST:event_jSlider1MouseReleased

    private void calcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcularActionPerformed
        try {
            if (model.getRowCount() <= 1) {

                throw new Exception("Adicione mais valores");

            } else {
                calcular();
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_calcularActionPerformed

    private void quartilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quartilActionPerformed
        if (tabela.getRowCount() == 0) {
        } else {

            switch (quartil.getSelectedIndex()) {
                case 0:
                quartilValor.setText(String.valueOf(lista.quartil(1)));
                break;
                case 1:
                quartilValor.setText(String.valueOf(lista.quartil(2)));
                break;
                case 2:
                quartilValor.setText(String.valueOf(lista.quartil(3)));
                break;
                default:
                break;
            }
        }
    }//GEN-LAST:event_quartilActionPerformed

    private void modaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modaActionPerformed

    private void salvarTabelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarTabelaActionPerformed
        gravar();
    }//GEN-LAST:event_salvarTabelaActionPerformed

    private void importarTabelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importarTabelaActionPerformed
        JDialog dialog = new JDialog();
        dialog.setTitle("Importar tabela");
        importarTabela panel = new importarTabela(this);
        dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
        dialog.setResizable(false);
        dialog.setPreferredSize(new Dimension(510, 170));
        dialog.getContentPane().add(panel);
        dialog.pack();
        dialog.setVisible(true);

    }//GEN-LAST:event_importarTabelaActionPerformed

    private void AdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdicionarActionPerformed

        try {
            if (adicionarValor.getText().equals("")) {
                throw new Exception("Preencha todos os campos!");
            }

            if ("".equals(frequencia.getText())) {
                frequencia.setText("1");

            }

            //Add elemento na linha
            model.addRow(new Object[]{Double.parseDouble(adicionarValor.getText()), Integer.parseInt(frequencia.getText())});

            //Resetar campos
            adicionarValor.setText("");
            frequencia.setText("");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_AdicionarActionPerformed

    private void LimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LimparActionPerformed
        model.setRowCount(0);
        media.setText("");
        mediana.setText("");
        moda.setText("");
        coefVariacao.setText("");
        desvioPadrao.setText("");
        pearson.setText("");
        quartilValor.setText("");
        poligonoFreq.removeAll();
        histograma.removeAll();
    }//GEN-LAST:event_LimparActionPerformed

    private void removerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerActionPerformed
        int[] rows = tabela.getSelectedRows();
        double[] row = new double[rows.length];
        for (int i = 0; i < rows.length; i++) {
            row[i] = rows[i];

        }
        Metodos.ordenarVetor(row);
        if (row.length == tabela.getRowCount()) {
            model.setRowCount(0);
            media.setText("");
            mediana.setText("");
            moda.setText("");
            coefVariacao.setText("");
            desvioPadrao.setText("");
            pearson.setText("");
            quartilValor.setText("");
            poligonoFreq.removeAll();
            histograma.removeAll();

        } else {
            for (int i = 0; i < row.length; i++) {

                model.removeRow((int) row[i]);

                try {
                    poligonoFreq.removeAll();
                    histograma.removeAll();
                    calcular();

                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
                }

            }
        }
    }//GEN-LAST:event_removerActionPerformed


    void frame() {
        this.setTitle(" A EstMates Calculator");
        try {
            img = ImageIO.read(new File("src/pief2/resources/images/logoIcon.png"));
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
        }
        this.setIconImage(img);

    }

    public void iconEstatistica() {
        ImageIcon tabIcon = new ImageIcon(
                this.getClass().getResource("resources/images/xama.png"));
        Image images = tabIcon.getImage();
        Image newimg = images.getScaledInstance(22, 24, java.awt.Image.SCALE_SMOOTH);
        tabIcon = new ImageIcon(newimg);
        JLabel labels = new JLabel("Estatística");
        labels.setIcon(tabIcon);
        painel.setTabComponentAt(1, labels);

    }

    public void iconSave() {
        ImageIcon tabIcon = new ImageIcon(
                this.getClass().getResource("resources/images/save.png"));
        Image images = tabIcon.getImage();
        Image newimg = images.getScaledInstance(15, 15, java.awt.Image.SCALE_SMOOTH);
        tabIcon = new ImageIcon(newimg);
        salvarTabela.setIcon(tabIcon);

    }

    public void iconImport() {
        ImageIcon tabIcon = new ImageIcon(
                this.getClass().getResource("resources/images/import.png"));
        Image images = tabIcon.getImage();
        Image newimg = images.getScaledInstance(15, 15, java.awt.Image.SCALE_SMOOTH);
        tabIcon = new ImageIcon(newimg);
        importarTabela.setIcon(tabIcon);

    }

    public void iconCalculadora() {
        ImageIcon tab1Icon = new ImageIcon(
                this.getClass().getResource("resources/images/calc.png"));
        Image image = tab1Icon.getImage(); // transform it 
        Image newimg = image.getScaledInstance(30, 30, java.awt.Image.SCALE_SMOOTH);
        tab1Icon = new ImageIcon(newimg);  // transform it back
        JLabel label = new JLabel("Calculadora");
        label.setIcon(tab1Icon);
        painel.setTabComponentAt(0, label);

    }

    public void iconGrafico() {
        ImageIcon tab1Icon = new ImageIcon(
                this.getClass().getResource("resources/images/graficozera.png"));
        Image image = tab1Icon.getImage(); // transform it 
        Image newimg = image.getScaledInstance(30, 30, java.awt.Image.SCALE_SMOOTH);
        tab1Icon = new ImageIcon(newimg);  // transform it back
        JLabel label = new JLabel("Gráfico");
        label.setIcon(tab1Icon);
        painel.setTabComponentAt(1, label);

    }

    public void gravar() {
        JFileChooser filechooser = new JFileChooser();
        if (filechooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            caminho = filechooser.getSelectedFile(); //minha variavel arquivo vira o arquivo escolhido pela pessoa
        } else {
            JOptionPane.showMessageDialog(this, "Você cancelou a operação.", "Operação cancelada pelo usuário.", JOptionPane.INFORMATION_MESSAGE);
        }

        try {
            arquivo = new FileWriter(caminho.getAbsolutePath() + ".csv", true);
            for (int i = 0; i < lista.valores.size(); i++) {
                arquivo.write(lista.valores.get(i) + ";" + lista.freq.get(i) + "\n");
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                if (arquivo != null) {
                    arquivo.close();
                }
            } catch (IOException e1) {
                JOptionPane.showMessageDialog(this, e1.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
            }
        }

    }

    public void calcular() throws Exception {

        boolean help = false;
        lista.valores.clear();
        lista.freq.clear();
        lista.valores.add((double) tabela.getValueAt(0, 0));
        lista.freq.add((int) tabela.getValueAt(0, 1));

        for (int i = 1; i < tabela.getRowCount(); i++) {

            for (int j = 0; j < lista.valores.size(); j++) {

                if ((double) tabela.getValueAt(i, 0) == lista.valores.get(j)) {

                    lista.freq.add(j, lista.freq.get(j) + (Integer) tabela.getValueAt(i, 1));
                    lista.freq.remove(j + 1);
                    help = true;
                    break;

                } else {
                    help = false;
                }

            }
            if (!help) {
                lista.valores.add((Double) tabela.getValueAt(i, 0));
                lista.freq.add((Integer) tabela.getValueAt(i, 1));

            }

        }
        int somafreq = 0;
        for (int i = 0; i < lista.freq.size(); i++) {
            somafreq = somafreq + lista.freq.get(i);

        }
        if (somafreq > 50000) {

            model.setRowCount(0);
            media.setText("");
            mediana.setText("");
            moda.setText("");
            coefVariacao.setText("");
            desvioPadrao.setText("");
            pearson.setText("");
            throw new Exception("Frequencia de termos acima do permitido!");

        }

        media.setText(String.valueOf(Metodos.arredondar(lista.media(), 2)));

        if (Metodos.arredondar(lista.moda(), 2) == 0) {
            moda.setText("Mais de uma moda");
        } else {
            moda.setText(String.valueOf(Metodos.arredondar(lista.moda(), 2)));
        }
        mediana.setText(String.valueOf(Metodos.arredondar(lista.mediana(), 2)));
        desvioPadrao.setText(String.valueOf(Metodos.arredondar(lista.desvio(), 2)));
        coefVariacao.setText(String.valueOf(Metodos.arredondar(lista.CV(), 2)) + "%");

        if (lista.pearson() == 0) {
            pearson.setText("Sem Coeficiente");
        } else {
            pearson.setText(String.valueOf(Metodos.arredondar(lista.pearson(), 2)));

        }
        quartil.setSelectedIndex(0);
        percentil.setText(String.valueOf(Metodos.arredondar(lista.percentil(50), 2)));
        Metodos.ordenarAmbos(lista.valores, lista.freq);
        poligono();
        histograma();

    }

    public void poligono() {

        try {
//Instância da classe apropriada do JFreeChart
            JFreeChart chart = ChartFactory.createXYLineChart(
                    "Poligono de frequencia",
                    "Valores",
                    "Frequencia",
                    createXYDataset(),
                    PlotOrientation.VERTICAL,
                    true,
                    true,
                    false
            );
//Algumas customizações (cores)
            chart.setBackgroundPaint(Color.white);
            XYPlot plot = chart.getXYPlot();
            XYLineAndShapeRenderer renderer = new XYLineAndShapeRenderer();
            renderer.setSeriesLinesVisible(0, true);
            plot.setRenderer(renderer);
            plot.setBackgroundPaint(Color.lightGray);
            plot.setDomainGridlinePaint(Color.white);
            plot.setRangeGridlinePaint(Color.white);
//Configuração dos eixos e escalas
            NumberAxis axis = (NumberAxis) plot.getDomainAxis();
            int ticks = (int) ((lista.amplitudeDeClasse()));
            axis.setTickLabelFont(axis.getLabelFont());

            axis.setTickUnit(new NumberTickUnit(ticks));
//Criação do painel do gráfico e inserção no painel (jPainel1) da janela
            ChartPanel chartPanel = new ChartPanel(chart);
            chartPanel.setPreferredSize(poligonoFreq.getSize());
            poligonoFreq.add(chartPanel, java.awt.BorderLayout.CENTER);
            this.getContentPane().validate();
            this.getContentPane().repaint();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(),
                    "ERRO", JOptionPane.ERROR_MESSAGE);
        }

    }

    public void histograma() {
        JFreeChart barChart = ChartFactory.createBarChart(
                "Histograma",
                "Valores",
                "Frequencia",
                createDataset(),
                PlotOrientation.VERTICAL,
                true,
                true,
                false
        );
        barChart.setBackgroundPaint(Color.white);

        ChartPanel chartPanel = new ChartPanel(barChart);
        chartPanel.setPreferredSize(histograma.getSize());
        histograma.add(chartPanel, java.awt.BorderLayout.CENTER);
        this.getContentPane().validate();
        this.getContentPane().repaint();

    }

    private XYDataset createXYDataset() {
        XYSeriesCollection datasete = new XYSeriesCollection();
        XYSeries serie = new XYSeries("Dados", true);

        for (int i = 0; i < lista.freq.size(); i++) {
            serie.add(lista.valores.get(i), lista.freq.get(i));

        }

        datasete.addSeries(serie);

        return datasete;
    }

    private CategoryDataset createDataset() {

        final DefaultCategoryDataset datasetes = new DefaultCategoryDataset();
        
               
        for (int i = 0; i < lista.valores.size(); i++) {
            datasetes.addValue(lista.freq.get(i), "Dados", lista.valores.get(i));

        }

        return datasetes;

    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Calculadora().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Adicionar;
    private javax.swing.JButton Limpar;
    private javax.swing.JTextField adicionarValor;
    private javax.swing.JButton calcular;
    private javax.swing.JTextField coefVariacao;
    private javax.swing.JTextField desvioPadrao;
    private javax.swing.JTextField frequencia;
    private javax.swing.JPanel histograma;
    private javax.swing.JButton importarTabela;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JTextField media;
    private javax.swing.JTextField mediana;
    private javax.swing.JTextField moda;
    private javax.swing.JTabbedPane painel;
    private javax.swing.JTextField pearson;
    private javax.swing.JTextField percentil;
    private javax.swing.JPanel poligonoFreq;
    private javax.swing.JComboBox<String> quartil;
    private javax.swing.JTextField quartilValor;
    private javax.swing.JButton remover;
    private javax.swing.JButton salvarTabela;
    public javax.swing.JTable tabela;
    private javax.swing.JLabel tick;
    // End of variables declaration//GEN-END:variables
}
